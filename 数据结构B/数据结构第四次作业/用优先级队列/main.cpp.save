#include <iostream>
#include <queue>

using namespace std;

struct task
{
    int order;
    int arrive;
    int time;

};

bool operator<(const task &x,const task &y)
{
    return x.arrive>y.arrive;
}

task Gettask()
{
    task tmp;

    cin>>tmp.order>>tmp.arrive>>tmp.time;

    return tmp;
}

int main()
{
  priority_queue<task> q;

  int number,time=0,index=0;result[100]={0};
  cin>>number;
  task tasks[number],tmp1,tmp2;

  for(int i=0;i<number;i++)
  {
      tasks[i]=Gettask();
  }

  for(int i=0;i<number;i++)
  {
      while(!q.empty())
      {
          tmp1=q.top();
          q.pop();
          tmp2=q.top();
          if(time+tmp1.time<=tasks[i].arrive)
          {
              time+=tmp1.time;
              result[index]=tmp1.order;
              index++;
              if(time+tmp1.time==tasks[i].arrive)
              break;
          }
          else
          {
              tmp1.time=tmp1.time-tasks[i].arrive+time;
              q.push(tmp1);
              result[index]=tmp1.order;
              index++;
              time=time+tasks[i].arrive-time;
              break;
          }
      }
      tmp1.order=tasks[i].order;
      tmp1.time=tasks[i].time;
      q.push[tmp1];
      time=tasks[i].arrive;
  }
  
  while()



  //while (!q.empty()) {cout << q.top().order << " "; q.pop();}
  return 0;
}
